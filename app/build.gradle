apply plugin:'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin:'io.fabric'
apply plugin: 'com.github.triplet.play'
android {
    
    playAccountConfigs {
        defaultAccountConfig {
            serviceAccountEmail = 'ci-uploader@api-5838958897138910585-275795.iam.gserviceaccount.com'
            pk12File = file('CI-Uploader.p12')
        }
    }
    signingConfigs {
        release {

            keyAlias 'upload'
            keyPassword 'describeupload'
            storeFile file('upload.keystore')
            storePassword 'describekeys'
        }
    }
    play {
        // ...
        track = 'alpha' // or 'rollout' or 'beta' or 'alpha'
        userFraction = 0.2 // only necessary for 'rollout', in this case default is 0.1 (10% of the target)
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId 'com.describe.taskmanager'
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName '0.0.1'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionNameSuffix 'Alpha'
        signingConfig signingConfigs.release
        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    buildToolsVersion '26.0.2'
    productFlavors {
    }
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def name = System.getenv("CI_PIPELINE_ID").toInteger()
        def code = versionProps['VERSION_CODE'].toInteger()
        versionProps['VERSION_CODE']=code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.describe.taskmanager"
            versionName name
            versionCode code
            minSdkVersion 21
            targetSdkVersion 26
        }
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    compile 'com.google.firebase:firebase-core:11.8.0'
    compile 'com.google.firebase:firebase-perf:11.8.0'
}
apply plugin: 'com.google.gms.google-services'